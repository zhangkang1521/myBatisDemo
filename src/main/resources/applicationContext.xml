<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
            http://www.springframework.org/schema/context
             http://www.springframework.org/schema/context/spring-context.xsd
             http://www.springframework.org/schema/tx
             http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">


    <!-- 整合mybatis -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <property name="url" value="jdbc:mysql://localhost:3306/zk"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
    </bean>

    <!--
        直接配置属性或使用mybatis配置文件均可
        1. 实现了InitializingBean接口在afterPropertiesSet方法中buildSqlSessionFactory;
        2. 实现了FactoryBean接口，getObject返回SqlSessionFactory
    -->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource" />-->
        <!--&lt;!&ndash;<property name="configLocation" value="classpath:mybatis.xml"/>&ndash;&gt;-->
        <!--<property name="mapperLocations" value="classpath:mappers/*.xml"></property>-->
    <!--</bean>-->

    <bean id="sqlSessionFactory" class="org.zk.mybatis.MySqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath:mappers/*.xml"></property>
    </bean>

    <!-- 实现FactoryBean，getObject方法返回sqlSession.getMapper() -->
    <!--<bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean">-->
        <!--<property name="mapperInterface" value="org.zk.dao.UserDao"/>-->
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--</bean>-->

    <!--<bean id="userDao" class="org.zk.mybatis.MyMapperFactoryBean">-->
        <!--<property name="mapperInterface" value="org.zk.dao.UserDao"/>-->
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--</bean>-->

    <!-- 自动扫描，注册MapperFactoryBean，无须一个个手动配置 -->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="basePackage" value="org.zk.dao" />-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>-->
    <!--</bean>-->

    <bean class="org.zk.mybatis.MyMapperScanConfigurer">
        <property name="basePackage" value="org.zk.dao" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>


    <!-- 整合mybatis end -->



</beans>



